package com.techlabs.dto;

import com.techlabs.entity.TransactionType;

import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Null;
import jakarta.validation.constraints.Positive;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
public class TransactionRequestDto {

    @NotNull(message = "Client registration number is mandatory")
    private Long registrationNumber;

    @NotBlank(message = "Bank name is mandatory")
    private String bankName;

    @NotBlank(message = "IFSC code is mandatory")
    private String ifscCode;

    @NotNull(message = "Account number is mandatory")
    private Long accountNumber;

    // These fields are required only for Beneficiary Payment
    @NotNull(message = "Beneficiary account number is required for Beneficiary Payment")
    @Null(groups = SalaryDisbursementGroup.class)  // Custom group to allow null for Salary Disbursement
    private Long beneficiaryAccountNumber;

    @NotBlank(message = "Beneficiary IFSC code is required for Beneficiary Payment")
    @Null(groups = SalaryDisbursementGroup.class)
    private String beneficiaryIfscCode;

    @NotNull(message = "Transaction type is mandatory")
    private TransactionType transactionType;

    // Mandatory for Beneficiary Payment, optional for Salary Disbursement
    @NotNull(message = "Amount is mandatory for Beneficiary Payment")
    @Positive(message = "Amount must be positive")
    private Double amount;

    // Optional field, only required for Salary Disbursement
    private String employeeCsvFileLink;
}

