package com.techlabs.entity;

import java.time.LocalDateTime;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Positive;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name = "admin_transactions")
@Data
@AllArgsConstructor
@NoArgsConstructor
public class AdminTransaction {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long transactionId;

    @Column(name = "transaction_amount")
    @NotNull(message = "Transaction amount is required")
    @Positive(message = "Transaction amount must be positive")
    private Double amount;

    @Column(name = "transaction_date")
    private LocalDateTime transactionDate = LocalDateTime.now();

    @ManyToOne
    @JoinColumn(name = "employee_id")
    private Employee employee;  // Using the same Employee table

    @ManyToOne
    @JoinColumn(name = "client_id")
    private Client client;  // Using the same Client table

    @Enumerated(EnumType.STRING)
    private TransactionType transactionType;  // Enum for transaction type: DEBIT, CREDIT

    // Enum for transaction type: DEBIT, CREDIT
    public enum TransactionType {
        DEBIT, CREDIT
    }
}

